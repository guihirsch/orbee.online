#!/usr/bin/env python3
"""
Exemplo de configura√ß√£o de regi√µes para o HLS Complete Analysis
Este arquivo mostra como configurar diferentes regi√µes para an√°lise
"""

# Exemplos de regi√µes v√°lidas para an√°lise HLS
REGIONS_EXAMPLES = {
    "Sinimbu, Rio Grande do Sul, Brasil": {
        "description": "Munic√≠pio de Sinimbu no RS - regi√£o rural com rios mapeados",
        "expected_rivers": ["Rio Pardinho", "Rio Pardo", "Rio Pequeno"],
        "buffer_distance": 200,
        "notes": "Regi√£o bem mapeada no OSM, boa cobertura HLS"
    },
    
    "Caxias do Sul, Rio Grande do Sul, Brasil": {
        "description": "Maior cidade da serra ga√∫cha",
        "expected_rivers": ["Rio das Antas", "Rio Carreiro"],
        "buffer_distance": 300,
        "notes": "Regi√£o urbana, pode ter menos rios mapeados"
    },
    
    "Porto Alegre, Rio Grande do Sul, Brasil": {
        "description": "Capital do Rio Grande do Sul",
        "expected_rivers": ["Rio Gua√≠ba", "Rio Jacu√≠", "Rio dos Sinos"],
        "buffer_distance": 500,
        "notes": "Regi√£o metropolitana, muitos rios mapeados"
    },
    
    "S√£o Paulo, S√£o Paulo, Brasil": {
        "description": "Maior cidade do Brasil",
        "expected_rivers": ["Rio Tiet√™", "Rio Pinheiros", "Rio Tamanduate√≠"],
        "buffer_distance": 400,
        "notes": "Regi√£o altamente urbanizada, rios polu√≠dos"
    },
    
    "Bras√≠lia, Distrito Federal, Brasil": {
        "description": "Capital do Brasil",
        "expected_rivers": ["Rio Parano√°", "Rio Descoberto"],
        "buffer_distance": 300,
        "notes": "Regi√£o do cerrado, boa cobertura HLS"
    },
    
    "Manaus, Amazonas, Brasil": {
        "description": "Capital do Amazonas",
        "expected_rivers": ["Rio Negro", "Rio Solim√µes", "Rio Amazonas"],
        "buffer_distance": 1000,
        "notes": "Regi√£o amaz√¥nica, muitos rios, cobertura HLS limitada por nuvens"
    }
}

def print_region_examples():
    """Imprime exemplos de regi√µes configuradas"""
    print("üåç EXEMPLOS DE REGI√ïES PARA AN√ÅLISE HLS")
    print("=" * 60)
    
    for region, info in REGIONS_EXAMPLES.items():
        print(f"\nüìç {region}")
        print(f"   üìù {info['description']}")
        print(f"   üåä Rios esperados: {', '.join(info['expected_rivers'])}")
        print(f"   üìè Buffer sugerido: {info['buffer_distance']}m")
        print(f"   üí° {info['notes']}")

def get_region_config(region_name):
    """Retorna configura√ß√£o para uma regi√£o espec√≠fica"""
    if region_name in REGIONS_EXAMPLES:
        return REGIONS_EXAMPLES[region_name]
    else:
        return {
            "description": "Regi√£o personalizada",
            "expected_rivers": ["Rios a serem descobertos"],
            "buffer_distance": 200,
            "notes": "Configure conforme necess√°rio"
        }

if __name__ == "__main__":
    print_region_examples()
    
    print("\n" + "="*60)
    print("üí° COMO USAR:")
    print("1. Copie a regi√£o desejada")
    print("2. Cole na vari√°vel REGION_NAME em hls_complete_analysis.py")
    print("3. Execute: python hls_complete_analysis.py")
    print("4. O script buscar√° automaticamente os rios da regi√£o")
    print("5. Filtrar√° apenas rios dentro dos limites administrativos")
    print("6. Gerar√° pontos cr√≠ticos de degrada√ß√£o da mata ciliar")
