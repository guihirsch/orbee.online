#!/usr/bin/env python3
"""
Exemplo de Uso dos Scripts HLS Analysis
Demonstra como usar os m√≥dulos individuais para an√°lise personalizada
"""

import os
import sys
from datetime import datetime

# Adicionar o diret√≥rio atual ao path para importar m√≥dulos locais
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

# Importar m√≥dulos
from hls_analysis import load_aoi_data, search_hls_data, select_best_item
from hls_ndvi_processing import load_and_process_hls_data, create_ndvi_composite
from hls_degradation_analysis import analyze_riparian_forest_degradation, generate_points_from_real_ndvi
from hls_export import export_geojson_results, export_geotiff_results

def exemplo_analise_basica():
    """Exemplo de an√°lise b√°sica de mata ciliar"""
    
    print("üîç EXEMPLO: An√°lise B√°sica de Mata Ciliar")
    print("=" * 50)
    
    # 1. Carregar AOI
    print("1. Carregando √Årea de Interesse...")
    aoi_gdf, source_path = load_aoi_data()
    print(f"   ‚úÖ AOI carregada: {source_path}")
    
    # 2. Buscar dados HLS
    print("\n2. Buscando dados HLS...")
    bounds = aoi_gdf.total_bounds
    hls_items = search_hls_data(bounds, "2022-06-01", "2022-09-30", 50)
    
    if hls_items:
        print(f"   ‚úÖ {len(hls_items)} itens HLS encontrados")
        
        # 3. Selecionar melhores itens
        print("\n3. Selecionando melhores itens...")
        selected_items = select_best_item(hls_items, max_items=2)
        
        if selected_items:
            print(f"   ‚úÖ {len(selected_items)} itens selecionados")
            
            # 4. Processar NDVI
            print("\n4. Processando NDVI...")
            processed_data = []
            
            for i, item in enumerate(selected_items):
                print(f"   Processando item {i+1}/{len(selected_items)}...")
                data = load_and_process_hls_data(item, bounds)
                if data:
                    processed_data.append(data)
            
            if processed_data:
                print(f"   ‚úÖ {len(processed_data)} itens processados")
                
                # 5. Criar composi√ß√£o
                print("\n5. Criando composi√ß√£o NDVI...")
                final_ndvi = create_ndvi_composite(processed_data)
                
                if final_ndvi:
                    print("   ‚úÖ Composi√ß√£o NDVI criada")
                    
                    # 6. An√°lise de degrada√ß√£o
                    print("\n6. Analisando degrada√ß√£o...")
                    degradation = analyze_riparian_forest_degradation(final_ndvi, aoi_gdf)
                    
                    if degradation:
                        print("   ‚úÖ An√°lise de degrada√ß√£o conclu√≠da")
                        
                        # 7. Gerar pontos cr√≠ticos
                        print("\n7. Gerando pontos cr√≠ticos...")
                        river_gdf, river_buffer = load_river_geometry_for_buffer()
                        
                        if river_buffer:
                            points = generate_points_from_real_ndvi(degradation, river_buffer, 20)
                            
                            if points:
                                print(f"   ‚úÖ {points['total_points']} pontos gerados")
                                
                                # 8. Exportar resultados
                                print("\n8. Exportando resultados...")
                                
                                # Exportar GeoJSON
                                geojson_success = export_geojson_results(
                                    points, degradation, "exemplo_pontos_criticos.geojson"
                                )
                                
                                # Exportar GeoTIFF
                                geotiff_success = export_geotiff_results(
                                    final_ndvi, degradation, "exemplo_ndvi.geotiff"
                                )
                                
                                if geojson_success and geotiff_success:
                                    print("   ‚úÖ Resultados exportados com sucesso!")
                                    print("   üìÑ Arquivos criados:")
                                    print("      - exemplo_pontos_criticos.geojson")
                                    print("      - exemplo_ndvi.geotiff")
                                else:
                                    print("   ‚ùå Erro na exporta√ß√£o")
                            else:
                                print("   ‚ùå Nenhum ponto cr√≠tico gerado")
                        else:
                            print("   ‚ö†Ô∏è Geometria do rio n√£o encontrada")
                    else:
                        print("   ‚ùå An√°lise de degrada√ß√£o falhou")
                else:
                    print("   ‚ùå Composi√ß√£o NDVI falhou")
            else:
                print("   ‚ùå Nenhum item processado com sucesso")
        else:
            print("   ‚ùå Nenhum item selecionado")
    else:
        print("   ‚ùå Nenhum item HLS encontrado")

def exemplo_analise_personalizada():
    """Exemplo de an√°lise com par√¢metros personalizados"""
    
    print("\nüîß EXEMPLO: An√°lise Personalizada")
    print("=" * 50)
    
    # Par√¢metros personalizados
    periodo_inicio = "2022-01-01"
    periodo_fim = "2022-12-31"
    cobertura_nuvens_max = 30  # Mais restritivo
    buffer_mata_ciliar = 300   # Maior buffer
    threshold_critico = 0.15   # Mais sens√≠vel
    threshold_moderado = 0.45  # Mais sens√≠vel
    
    print(f"üìã Par√¢metros personalizados:")
    print(f"   - Per√≠odo: {periodo_inicio} a {periodo_fim}")
    print(f"   - Cobertura de nuvens: {cobertura_nuvens_max}%")
    print(f"   - Buffer mata ciliar: {buffer_mata_ciliar}m")
    print(f"   - Threshold cr√≠tico: {threshold_critico}")
    print(f"   - Threshold moderado: {threshold_moderado}")
    
    # Carregar AOI
    aoi_gdf, _ = load_aoi_data()
    bounds = aoi_gdf.total_bounds
    
    # Buscar dados com par√¢metros personalizados
    print("\nüîç Buscando dados com par√¢metros personalizados...")
    hls_items = search_hls_data(bounds, periodo_inicio, periodo_fim, cobertura_nuvens_max)
    
    if hls_items:
        print(f"   ‚úÖ {len(hls_items)} itens encontrados")
        
        # Processar apenas o melhor item
        selected_items = select_best_item(hls_items, max_items=1)
        
        if selected_items:
            print("   ‚úÖ Melhor item selecionado")
            
            # Processar NDVI
            processed_data = load_and_process_hls_data(selected_items[0], bounds)
            
            if processed_data:
                print("   ‚úÖ NDVI processado")
                
                # An√°lise de degrada√ß√£o com thresholds personalizados
                print("   üîß Aplicando thresholds personalizados...")
                
                # Aqui voc√™ poderia modificar os thresholds globalmente
                # ou passar como par√¢metros para as fun√ß√µes
                
                print("   ‚úÖ An√°lise personalizada conclu√≠da")
            else:
                print("   ‚ùå Processamento NDVI falhou")
        else:
            print("   ‚ùå Nenhum item selecionado")
    else:
        print("   ‚ùå Nenhum item encontrado com par√¢metros personalizados")

def exemplo_exportacao_customizada():
    """Exemplo de exporta√ß√£o customizada"""
    
    print("\nüì§ EXEMPLO: Exporta√ß√£o Customizada")
    print("=" * 50)
    
    # Simular dados de exemplo
    dados_exemplo = {
        'critical': [
            {
                'lat': -29.5,
                'lon': -52.4,
                'ndvi': 0.15,
                'severity': 'critical',
                'level': 'very_sparse',
                'color': '#DC143C',
                'label': 'Vegeta√ß√£o muito rala',
                'description': '√Årea cr√≠tica - NDVI 0.15'
            }
        ],
        'moderate': [
            {
                'lat': -29.5,
                'lon': -52.3,
                'ndvi': 0.35,
                'severity': 'moderate',
                'level': 'sparse',
                'color': '#FF8C00',
                'label': 'Vegeta√ß√£o esparsa',
                'description': '√Årea moderada - NDVI 0.35'
            }
        ],
        'fair': [],
        'water': [],
        'total_points': 2,
        'generation_params': {
            'thresholds': {'critical': 0.2, 'moderate': 0.5}
        }
    }
    
    # Metadados de exemplo
    metadados_exemplo = {
        'statistics': {
            'total_pixels': 1000,
            'ndvi_mean': 0.4,
            'critical_fraction': 0.1,
            'moderate_fraction': 0.3,
            'overall_status': 'moderately_degraded'
        }
    }
    
    print("üìÑ Exportando dados de exemplo...")
    
    # Exportar GeoJSON customizado
    sucesso = export_geojson_results(
        dados_exemplo,
        metadados_exemplo,
        "exemplo_customizado.geojson"
    )
    
    if sucesso:
        print("   ‚úÖ GeoJSON customizado exportado")
        print("   üìÑ Arquivo: exemplo_customizado.geojson")
    else:
        print("   ‚ùå Erro na exporta√ß√£o customizada")

def main():
    """Fun√ß√£o principal do exemplo"""
    
    print("üöÄ EXEMPLOS DE USO - HLS Analysis")
    print("=" * 60)
    print("Este script demonstra como usar os m√≥dulos HLS Analysis")
    print("para diferentes cen√°rios de an√°lise de mata ciliar.")
    print("=" * 60)
    
    try:
        # Exemplo 1: An√°lise b√°sica
        exemplo_analise_basica()
        
        # Exemplo 2: An√°lise personalizada
        exemplo_analise_personalizada()
        
        # Exemplo 3: Exporta√ß√£o customizada
        exemplo_exportacao_customizada()
        
        print("\nüéâ EXEMPLOS CONCLU√çDOS!")
        print("=" * 60)
        print("üìã Pr√≥ximos passos:")
        print("1. Execute o script completo: python hls_complete_analysis.py")
        print("2. Personalize os par√¢metros conforme necess√°rio")
        print("3. Integre os m√≥dulos em seu pr√≥prio c√≥digo")
        print("4. Consulte a documenta√ß√£o para mais detalhes")
        
    except Exception as e:
        print(f"\n‚ùå Erro durante execu√ß√£o dos exemplos: {e}")
        print("üí° Verifique se todas as depend√™ncias est√£o instaladas")
        print("   pip install -r requirements_hls.txt")

if __name__ == "__main__":
    main()
